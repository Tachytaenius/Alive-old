* Give a message at the beginning reassuring users with sane, IEEE-754-compliant machines.
* Make the session recording system.
	* If there's text, don't record the player's "progress" through the text. Let the replayer pause and see it themselves...?
* Make a no-building-but-yes-moving-around zone around the world map at least as big as the biggest entity. Make it really slow to move in or something so that people aren't tempted to travel in it. Or maybe just scrap the idea.
* Figure out my Lua conventions
* Make the entity spatials getter and create proper absolute setters too
	* Watch out, I think reach will break.
* Optimise draw with... batching?
* Include light in "can see object" for both getSeenEntities and canSeeEntity. use a "night vision" number
* Stop drawing during times of intense processing. Discuss methods on Discord.
* organise how tiles' different layers are composed (roof, wall, ground...)
	* Draw top layer, if it returns "there is a hole in what i have drawn" then draw the layer below and repeat
* TODO: test lighting on more than just black/white
* Stop sprite flickering
* Stop objects from getting passed betwen tiles during collision detection
* Stop objects from tunelling through tiles during collision detectiona
* Make sure that RNG calls are in a deterministic order
* Queue entity changes as is done with tiles
* Tiles taking damage can be for walls, rooves or grounds
* Do shade tile if lamp shadow and FOV shadow are on different sides
